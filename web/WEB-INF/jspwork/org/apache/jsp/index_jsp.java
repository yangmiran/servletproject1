/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-20 00:43:06 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import member.model.vo.Member;
import member.model.vo.Member;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/views/common/header.jsp", Long.valueOf(1596596837171L));
    _jspx_dependants.put("/views/common/footer.jsp", Long.valueOf(1595810824048L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			"views/common/error.jsp", true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>test1</title>\r\n");
      out.write("<style type=\"text/css\">\r\n");
      out.write("\r\n");
      out.write("div.lineA { \r\n");
      out.write("\theight : 100px;\r\n");
      out.write("\tborder : 1px solid gray;\r\n");
      out.write("\tfloat : left;\r\n");
      out.write("\tmargin : 5px;\r\n");
      out.write("\tpadding : 5px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#banner {\r\n");
      out.write("\twidth : 750px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#loginBox {\r\n");
      out.write("\twidth : 274px;\r\n");
      out.write("\tfont-size : 9px;\r\n");
      out.write("\ttext-align : left;\r\n");
      out.write("\tpadding-left : 20px;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("div#loginBox button {\r\n");
      out.write("\twidth : 250px;\r\n");
      out.write("\theight : 35px;\r\n");
      out.write("\tbackground-color : navy;\r\n");
      out.write("\tcolor : white;\r\n");
      out.write("\tmargin-top : 10px;\r\n");
      out.write("\tmargin-bottom : 15px;\r\n");
      out.write("\tfont-size : 14pt;\r\n");
      out.write("\tfont-weight : bold;\r\n");
      out.write("\tborder : 1px solid #dae1e6\r\n");
      out.write("}\r\n");
      out.write("div#banner {\r\n");
      out.write("\twidth : 750px;\r\n");
      out.write("\tpadding : 0;\r\n");
      out.write("}\r\n");
      out.write("div#banner img {\r\n");
      out.write("\tmargin : 0;\r\n");
      out.write("\tpadding : 0;\r\n");
      out.write("\twidth : 750px;\r\n");
      out.write("\theight : 110px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("<script src=\"/test1/resources/js/jquery-3.5.1.min.js\"></script>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("$(function(){\r\n");
      out.write("\t/*\r\n");
      out.write("\t\t주기적으로 반복 요청하려면\r\n");
      out.write("\t\tsetInterval(function(){ $.ajax(); }, 시간);\r\n");
      out.write("\t\t시간은 밀리세컨드임 : 1000 이 1초임\r\n");
      out.write("\t*/\r\n");
      out.write("\t/* setInterval(function(){\r\n");
      out.write("\t\tconsole.log(\"setInterval() 에 의해 자동 실행 확인\");\r\n");
      out.write("\t}, 100); */\r\n");
      out.write("\t\r\n");
      out.write("\t//최근 등록한 공지글 3개 출력되게 함\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"/test1/ntop3\",\r\n");
      out.write("\t\ttype: \"get\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\tconsole.log(\"success : \" + data);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//object ==> string 으로 변환\r\n");
      out.write("\t\t\tvar jsonStr = JSON.stringify(data);\r\n");
      out.write("\t\t\t//string ==> json 객체로 바꿈\r\n");
      out.write("\t\t\tvar json = JSON.parse(jsonStr);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar values = \"\";\r\n");
      out.write("\t\t\tfor(var i in json.list){\r\n");
      out.write("\t\t\t\tvalues += \"<tr><td>\" + json.list[i].no + \"</td><td><a href='/test1/ndetail?noticeno=\" + json.list[i].no + \"'>\" \r\n");
      out.write("\t\t\t\t\t\t+ decodeURIComponent(json.list[i].title).replace(/\\+/gi, \" \")\r\n");
      out.write("\t\t\t\t\t\t+ \"</a></td><td>\" + json.list[i].date + \"</td></tr>\";\r\n");
      out.write("\t\t\t} //for in\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#newnotice\").html($(\"#newnotice\").html() + values);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(jqXHR, textStatus, errorThrown){\r\n");
      out.write("\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textStatus + \", \" + errorThrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}); //ajax\r\n");
      out.write("\t\r\n");
      out.write("\t//조회수 많은 인기 게시 원글 상위 3개 조회 출력 처리\r\n");
      out.write("\t$.ajax({\r\n");
      out.write("\t\turl: \"/test1/btop3\",\r\n");
      out.write("\t\ttype: \"get\",\r\n");
      out.write("\t\tdataType: \"json\",\r\n");
      out.write("\t\tsuccess: function(data){\r\n");
      out.write("\t\t\tconsole.log(\"success : \" + data);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t//object ==> string 으로 변환\r\n");
      out.write("\t\t\tvar jsonStr = JSON.stringify(data);\r\n");
      out.write("\t\t\t//string ==> json 객체로 바꿈\r\n");
      out.write("\t\t\tvar json = JSON.parse(jsonStr);\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\tvar values = \"\";\r\n");
      out.write("\t\t\tfor(var i in json.list){\r\n");
      out.write("\t\t\t\tvalues += \"<tr><td>\" + json.list[i].bnum + \"</td><td><a href='/test1/bdetail?bnum=\" + json.list[i].bnum + \"'>\" \r\n");
      out.write("\t\t\t\t\t\t+ decodeURIComponent(json.list[i].btitle).replace(/\\+/gi, \" \")\r\n");
      out.write("\t\t\t\t\t\t+ \"</a></td><td>\" + json.list[i].rcount + \"</td></tr>\";\r\n");
      out.write("\t\t\t} //for in\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t$(\"#toplist\").html($(\"#toplist\").html() + values);\r\n");
      out.write("\t\t},\r\n");
      out.write("\t\terror: function(jqXHR, textStatus, errorThrown){\r\n");
      out.write("\t\t\tconsole.log(\"error : \" + jqXHR + \", \" + textStatus + \", \" + errorThrown);\r\n");
      out.write("\t\t}\r\n");
      out.write("\t});\r\n");
      out.write("\t\r\n");
      out.write("}); //document.ready\r\n");
      out.write("\r\n");
      out.write("function movePage(){\r\n");
      out.write("\tlocation.href = \"views/member/loginPage.html\";\r\n");
      out.write("}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write('\r');
      out.write('\n');

	Member loginMember = (Member)session.getAttribute("loginMember");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>test1</title>\r\n");
      out.write("<style>\r\n");
      out.write("header {margin:0; padding:0;}\r\n");
      out.write("header h1#logo {\r\n");
      out.write("\tfont-size: 36pt;\r\n");
      out.write("\tfont-style: italic;\r\n");
      out.write("\tcolor: navy;\r\n");
      out.write("\ttext-shadow: 2px 2px 2px gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header ul#menubar {\r\n");
      out.write("\tlist-style:none;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("hr {clear:both;}\r\n");
      out.write("\r\n");
      out.write("header ul#menubar li {\r\n");
      out.write("\t/* float: left; */\r\n");
      out.write("\tdisplay:inline-block;\r\n");
      out.write("\twidth: 120px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tmargin-right: 5px;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("header ul#menubar li a {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\twidth:120px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tdisplay:block;\r\n");
      out.write("\tbackground-color: orange;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcolor: navy;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\ttext-shadow: 1px 1px 2px white;\r\n");
      out.write("\tline-height : 30px;\r\n");
      out.write("}\r\n");
      out.write("header ul#menubar li a:hover {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\twidth:120px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tdisplay:block;\r\n");
      out.write("\tbackground-color: navy;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\ttext-shadow: 1px 1px 2px navy;\r\n");
      out.write("\tline-height : 30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("<h1 id=\"logo\">test1</h1>\r\n");
 if(loginMember != null && loginMember.getUserid().equals("admin")){ //관리자가 로그인 했을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("\t<li><a href=\"/test1/mlist\">회원관리</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/nlist.ad\">공지글관리</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/blist\">게시글관리</a></li>\r\n");
      out.write("\t<li><a href=\"#\">QnA관리</a></li>\r\n");
      out.write("\t<li><a href=\"#\">사진게시판관리</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/views/test/testPage.jsp\">필터테스트</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/index.jsp\">Home</a></li>\r\n");
      out.write("</ul>\r\n");
 }else if(loginMember != null){ // 일반 회원이 로그인했을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("\t<li><a href=\"/test1/mlist\">암호화회원가입</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/nlist\">공지사항</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/blist?page=1\">게시글</a></li>\r\n");
      out.write("\t<li><a href=\"#\">QnA</a></li>\r\n");
      out.write("\t<li><a href=\"#\">사진게시판</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/views/test/testPage.jsp\">필터테스트</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/index.jsp\">Home</a></li>\r\n");
      out.write("</ul>\r\n");
 }else{ //로그인하지 않았을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("\t<li><a href=\"/test1/views/member/enrollPage.html\">회원가입</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/nlist\">공지사항</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/blist?page=1\">게시글</a></li>\r\n");
      out.write("\t<li><a href=\"#\">QnA</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/views/test/cryptoEnrollPage.html\">암호화회원가입</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/views/test/testPage.jsp\">필터테스트</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/index.jsp\">Home</a></li>\r\n");
      out.write("</ul>\r\n");
 } 
      out.write("\r\n");
      out.write("</header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<hr style=\"clear:both;\">\r\n");
      out.write("\t<div style =\"width: 1140px;margin: 0 auto;\">\r\n");
      out.write("\t\t<div id=\"banner\" class=\"lineA\">\r\n");
      out.write("\t\t\t<img src=\"resources/images/photo2.jpg\">\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 if(loginMember == null){ //로그인 안 한 상태이면  
      out.write("\r\n");
      out.write("\t\t<div id=\"loginBox\" class=\"lineA\">\r\n");
      out.write("\t\t\ttest1 사이트 방문을 환영합니다.<br>\r\n");
      out.write("\t\t\t<!-- <button onclick=\"javascript:location.href='views/member/loginPage.html';\">로그인하세요.</button>-->\r\n");
      out.write("\t\t\t<button onclick=\"movePage();\">로그인 하세요.</button> <br>\r\n");
      out.write("\t\t\t<a>아이디/비밀번호 조회</a> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n");
      out.write("\t\t\t<a href=\"views/member/enrollPage.html\">회원가입</a>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 }else if(loginMember.getUserid().equals("admin")){  //로그인한 사용자가 admin 이면 
      out.write("\r\n");
      out.write("\t\t<div id=\"loginBox\" class=\"lineA\">\r\n");
      out.write("\t\t\t");
      out.print( loginMember.getUsername() );
      out.write(" 님<br>\r\n");
      out.write("\t\t\t<button onclick=\"javascript:location.href='logout';\">로그아웃</button> <br>\r\n");
      out.write("\t\t\t<!-- <a href=\"/test1/mlist\">회원관리</a> &nbsp; &nbsp;\r\n");
      out.write("\t\t\t<a>공지사항관리</a> &nbsp; &nbsp;\r\n");
      out.write("\t\t\t<a>게시글관리</a> &nbsp; &nbsp;  -->\r\n");
      out.write("\t\t\t<a href=\"/test1/myinfo?userid=");
      out.print( loginMember.getUserid() );
      out.write("\">My page</a>\r\n");
      out.write("\t\t\t<!-- 쿼리스트링(Query String) : ?이름=전송값&이름=전송값 -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 }else {  //일반 회원이 로그인한 상태이면 
      out.write("\r\n");
      out.write("\t\t<div id=\"loginBox\" class=\"lineA\">\r\n");
      out.write("\t\t\t");
      out.print( loginMember.getUsername() );
      out.write(" 님<br>\r\n");
      out.write("\t\t\t<button onclick=\"javascript:location.href='logout';\">로그아웃</button> <br>\r\n");
      out.write("\t\t\t<a>쪽지</a> &nbsp; &nbsp;\r\n");
      out.write("\t\t\t<a>메일</a>\r\n");
      out.write("\t\t\t&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp;\r\n");
      out.write("\t\t\t<a href=\"/test1/myinfo?userid=");
      out.print( loginMember.getUserid() );
      out.write("\">My page</a>\r\n");
      out.write("\t\t\t<!-- 쿼리스트링(Query String) : ?이름=전송값&이름=전송값 -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t");
 } 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t<hr style=\"clear:left;\">\r\n");
      out.write("\t\r\n");
      out.write("\t<section>\r\n");
      out.write("\t\t<!-- 최근 등록 공지글 3개 조회 출력 -->\r\n");
      out.write("\t\t<div style=\"float:left;border:1px solid navy;padding:5px;margin:5px;\">\r\n");
      out.write("\t\t\t<h4>최근 공지글</h4>\r\n");
      out.write("\t\t\t<table id=\"newnotice\" border=\"1\" cellspacing=\"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t<th>날짜</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t\t<!-- 조회수 많은 게시글 3개 조회 출력 -->\r\n");
      out.write("\t\t<div style=\"float:left;border:1px solid navy;padding:5px;margin:5px;\">\r\n");
      out.write("\t\t\t<h4>인기 게시글</h4>\r\n");
      out.write("\t\t\t<table id=\"toplist\" border=\"1\" cellspacing=\"0\">\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<th>번호</th>\r\n");
      out.write("\t\t\t\t\t<th>제목</th>\r\n");
      out.write("\t\t\t\t\t<th>조회수</th>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</section>\r\n");
      out.write("\t<hr style=\"clear:both;\">\r\n");
      out.write("\t<!-- 상대경로만 사용 가능함 -->\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<style>\r\n");
      out.write("footer {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbackground-color: navy;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<footer>\r\n");
      out.write("copyright@kh 과정평가형 산업기사과정 샘플 2020-07-27<br>\r\n");
      out.write("TEL : 02-1234-5678, FAX : 02-1234-5679\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
