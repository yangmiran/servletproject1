/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.57
 * Generated at: 2020-08-05 00:51:23 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.board;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import board.model.vo.Board;
import java.util.ArrayList;
import java.sql.Date;
import member.model.vo.Member;

public final class boardListView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("/views/board/../common/header.jsp", Long.valueOf(1595838419863L));
    _jspx_dependants.put("/views/board/../common/footer.jsp", Long.valueOf(1595810824048L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("member.model.vo.Member");
    _jspx_imports_classes.add("board.model.vo.Board");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("java.sql.Date");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	ArrayList<Board> list = (ArrayList<Board>)request.getAttribute("list");
	int listCount = ((Integer)request.getAttribute("listCount")).intValue();
	int startPage = ((Integer)request.getAttribute("startPage")).intValue();
	int endPage = ((Integer)request.getAttribute("endPage")).intValue();
	int maxPage = ((Integer)request.getAttribute("maxPage")).intValue();
	int currentPage = ((Integer)request.getAttribute("currentPage")).intValue();

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>test1</title>\r\n");
      out.write("<script>\r\n");
      out.write("\tfunction showWriteForm(){\r\n");
      out.write("\t\tlocation.href = \"/test1/views/board/boardWriteForm.jsp\";\r\n");
      out.write("\t}\r\n");
      out.write("</script>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write('\r');
      out.write('\n');

	Member loginMember = (Member)session.getAttribute("loginMember");

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>test1</title>\r\n");
      out.write("<style>\r\n");
      out.write("header {margin:0; padding:0;}\r\n");
      out.write("header h1#logo {\r\n");
      out.write("\tfont-size: 36pt;\r\n");
      out.write("\tfont-style: italic;\r\n");
      out.write("\tcolor: navy;\r\n");
      out.write("\ttext-shadow: 2px 2px 2px gray;\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("header ul#menubar {\r\n");
      out.write("\tlist-style:none;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("hr {clear:both;}\r\n");
      out.write("\r\n");
      out.write("header ul#menubar li {\r\n");
      out.write("\t/* float: left; */\r\n");
      out.write("\tdisplay:inline-block;\r\n");
      out.write("\twidth: 120px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tmargin-right: 5px;\r\n");
      out.write("\tpadding: 0;\r\n");
      out.write("}\r\n");
      out.write("header ul#menubar li a {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\twidth:120px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tdisplay:block;\r\n");
      out.write("\tbackground-color: orange;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcolor: navy;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\ttext-shadow: 1px 1px 2px white;\r\n");
      out.write("\tline-height : 30px;\r\n");
      out.write("}\r\n");
      out.write("header ul#menubar li a:hover {\r\n");
      out.write("\ttext-decoration: none;\r\n");
      out.write("\twidth:120px;\r\n");
      out.write("\theight: 30px;\r\n");
      out.write("\tdisplay:block;\r\n");
      out.write("\tbackground-color: navy;\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tcolor: white;\r\n");
      out.write("\tfont-weight: bold;\r\n");
      out.write("\tmargin: 0;\r\n");
      out.write("\ttext-shadow: 1px 1px 2px navy;\r\n");
      out.write("\tline-height : 30px;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<header>\r\n");
      out.write("<h1 id=\"logo\">test1</h1>\r\n");
 if(loginMember != null && loginMember.getUserid().equals("admin")){ //관리자가 로그인 했을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("\t<li><a href=\"/test1/mlist\">회원관리</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/nlist.ad\">공지글관리</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/blist\">게시글관리</a></li>\r\n");
      out.write("\t<li><a href=\"#\">QnA관리</a></li>\r\n");
      out.write("\t<li><a href=\"#\">사진게시판관리</a></li>\r\n");
      out.write("\t<li><a href=\"#\">#</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/index.jsp\">Home</a></li>\r\n");
      out.write("</ul>\r\n");
 }else if(loginMember != null){ // 일반 회원이 로그인했을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("\t<li><a href=\"/test1/mlist\">암호화회원가입</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/nlist\">공지사항</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/blist?page=1\">게시글</a></li>\r\n");
      out.write("\t<li><a href=\"#\">QnA</a></li>\r\n");
      out.write("\t<li><a href=\"#\">사진게시판</a></li>\r\n");
      out.write("\t<li><a href=\"#\">#</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/index.jsp\">Home</a></li>\r\n");
      out.write("</ul>\r\n");
 }else{ //로그인하지 않았을 때 
      out.write("\r\n");
      out.write("<ul id=\"menubar\">\r\n");
      out.write("\t<li><a href=\"/test1/views/member/enrollPage.html\">회원가입</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/nlist\">공지사항</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/blist?page=1\">게시글</a></li>\r\n");
      out.write("\t<li><a href=\"#\">QnA</a></li>\r\n");
      out.write("\t<li><a href=\"#\">사진게시판</a></li>\r\n");
      out.write("\t<li><a href=\"#\">#</a></li>\r\n");
      out.write("\t<li><a href=\"/test1/index.jsp\">Home</a></li>\r\n");
      out.write("</ul>\r\n");
 } 
      out.write("\r\n");
      out.write("</header>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("<hr>\r\n");
      out.write("<h2 align=\"center\">게시글 목록  : 총 ");
      out.print( listCount );
      out.write(" 개</h2>\r\n");
      out.write("<!-- 게시글 쓰기(등록)은 로그인한 회원만 가능함 -->\r\n");
 if(loginMember != null){ //로그인 상태라면 
      out.write("\r\n");
      out.write("<div style=\"align:center; text-align:center\">\r\n");
      out.write("\t<button onclick=\"showWriteForm();\">글쓰기</button>\r\n");
      out.write("</div>\r\n");
 } 
      out.write("\r\n");
      out.write("<br>\r\n");
      out.write("<table align=\"center\" border=\"1\" cellspacing=\"0\" width=\"700\">\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<th>번호</th>\r\n");
      out.write("\t\t<th>제목</th>\r\n");
      out.write("\t\t<th>작성자</th>\r\n");
      out.write("\t\t<th>날짜</th>\r\n");
      out.write("\t\t<th>조회수</th>\r\n");
      out.write("\t\t<th>첨부파일</th>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");
 for(Board b : list){ 
      out.write("\r\n");
      out.write("\t<tr>\r\n");
      out.write("\t\t<td align=\"center\">");
      out.print( b.getBoardNum() );
      out.write("</td>\r\n");
      out.write("\t\t<td>\r\n");
      out.write("\t\t\t<!-- 댓글일때는 제목을 들여쓰기함 -->\r\n");
      out.write("\t\t\t");
 if(b.getBoardLevel() == 1){ //원글의 댓글일 때 
      out.write("\r\n");
      out.write("\t\t\t&nbsp; &nbsp; ▷\r\n");
      out.write("\t\t\t");
 }else if(b.getBoardLevel() == 2){ //댓글의 댓글일 때 
      out.write("\r\n");
      out.write("\t\t\t&nbsp; &nbsp; &nbsp; &nbsp; ▷▷\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t\t<!-- 로그인한 사용자만(회원만) 상세보기할 수 있게 함 -->\r\n");
      out.write("\t\t\t");
 if(loginMember != null){ 
      out.write("\r\n");
      out.write("\t\t\t\t<a href=\"/test1/bdetail?bnum=");
      out.print( b.getBoardNum() );
      out.write("&page=");
      out.print( currentPage );
      out.write('"');
      out.write('>');
      out.print( b.getBoardTitle() );
      out.write("</a>\r\n");
      out.write("\t\t\t");
 }else{ 
      out.write("\r\n");
      out.write("\t\t\t\t");
      out.print( b.getBoardTitle() );
      out.write("\r\n");
      out.write("\t\t\t");
 } 
      out.write("\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t\t<td align=\"center\">");
      out.print( b.getBoardWriter() );
      out.write("</td>\r\n");
      out.write("\t\t<td align=\"center\">");
      out.print( b.getBoardDate() );
      out.write("</td>\r\n");
      out.write("\t\t<td align=\"center\">");
      out.print( b.getBoardReadCount() );
      out.write("</td>\r\n");
      out.write("\t\t<td align=\"center\">\r\n");
      out.write("\t\t\t");
 if(b.getBoardOriginalFileName() != null){ 
      out.write("\r\n");
      out.write("\t\t\t◎\r\n");
      out.write("\t\t\t");
 }else{ 
      out.write("\r\n");
      out.write("\t\t\t&nbsp;\r\n");
      out.write("\t\t\t");
 } //for each 
      out.write("\r\n");
      out.write("\t\t</td>\r\n");
      out.write("\t</tr>\r\n");
      out.write("\t");
 } 
      out.write("\r\n");
      out.write("</table>\r\n");
      out.write("<br>\r\n");
      out.write("<!-- 페이징 처리 -->\r\n");
      out.write("<div style=\"text-align:center;\">\r\n");
 if(currentPage <= 1){ 
      out.write("\r\n");
      out.write("\t[맨처음]&nbsp;\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t<a href=\"/test1/blist?page=1\">[맨처음]</a>\r\n");
 } 
      out.write("\r\n");
      out.write("<!-- 이전 그룹으로 이동 처리 -->\r\n");
      out.write("<!-- - 10은 밑에 보여질 페이지가 10 (5로 할거면 5로 변경하면됨) -->\r\n");
 if((currentPage - 10) < startPage && (currentPage - 10) > 1){ 
      out.write("\r\n");
      out.write("<a href=\"/test1/blist?page=");
      out.print( startPage - 10 );
      out.write("\">[이전그룹]</a>\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t[이전그룹]&nbsp;\r\n");
 } 
      out.write("\r\n");
      out.write("<!-- 현재 페이지가 속한 페이지그룹의 숫자 출력 처리 -->\r\n");
 for(int p = startPage; p <= endPage; p++){ 
	if(p == currentPage){ 
      out.write("\r\n");
      out.write("\t<font color=\"red\" size=\"4\"><b>[");
      out.print( p );
      out.write("]</b></font>\r\n");
      out.write("\t");
 }else{ 
      out.write("\r\n");
      out.write("\t<a href=\"/test1/blist?page=");
      out.print( p );
      out.write('"');
      out.write('>');
      out.print( p );
      out.write("</a>\r\n");
 }} 
      out.write("\r\n");
      out.write("<!-- 다음 그룹으로 이동 처리 -->\r\n");
 if((currentPage + 10) > endPage && (currentPage + 10) < maxPage){ 
      out.write("\r\n");
      out.write("<a href=\"/test1/blist?page=");
      out.print( endPage + 10 );
      out.write("\">[다음그룹]</a>\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t[다음그룹]&nbsp;\r\n");
 } 
      out.write("\r\n");
      out.write("<!-- 맨끝 페이지로 이동 처리 -->\r\n");
 if(currentPage >= maxPage){ 
      out.write("\r\n");
      out.write("\t[맨끝]&nbsp;\r\n");
 }else{ 
      out.write("\r\n");
      out.write("\t<a href=\"/test1/blist?page=");
      out.print( maxPage );
      out.write("\">[맨끝]</a>\r\n");
 } 
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<hr>\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title></title>\r\n");
      out.write("<style>\r\n");
      out.write("footer {\r\n");
      out.write("\ttext-align: center;\r\n");
      out.write("\tbackground-color: navy;\r\n");
      out.write("\tcolor:white;\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<footer>\r\n");
      out.write("copyright@kh 과정평가형 산업기사과정 샘플 2020-07-27<br>\r\n");
      out.write("TEL : 02-1234-5678, FAX : 02-1234-5679\r\n");
      out.write("</footer>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
